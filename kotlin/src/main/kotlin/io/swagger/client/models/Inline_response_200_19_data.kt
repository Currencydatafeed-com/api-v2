/**
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param _1d Percent change over 1 day
 * @param _7d Percent change over 7 days
 * @param _15d Percent change over 15 days
 * @param _30d Percent change over 30 days
 * @param _90d Percent change over 90 days
 * @param _180d Percent change over 180 days
 * @param _270d Percent change over 270 days
 * @param _365d Percent change over 365 days
 * @param _720d Percent change over 720 days
 */
data class InlineResponse20019Data (

    /* Percent change over 1 day */
    val _1d: kotlin.Float? = null,
    /* Percent change over 7 days */
    val _7d: kotlin.Float? = null,
    /* Percent change over 15 days */
    val _15d: kotlin.Float? = null,
    /* Percent change over 30 days */
    val _30d: kotlin.Float? = null,
    /* Percent change over 90 days */
    val _90d: kotlin.Float? = null,
    /* Percent change over 180 days */
    val _180d: kotlin.Float? = null,
    /* Percent change over 270 days */
    val _270d: kotlin.Float? = null,
    /* Percent change over 365 days */
    val _365d: kotlin.Float? = null,
    /* Percent change over 720 days */
    val _720d: kotlin.Float? = null
) {
}