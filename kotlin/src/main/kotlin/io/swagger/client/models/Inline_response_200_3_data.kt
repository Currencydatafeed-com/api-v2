/**
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param from Source currency code
 * @param to Target currency code
 * @param amount Amount to convert
 * @param rate Conversion rate applied
 * @param conversionResult Result of the conversion (amount * rate)
 * @param date Rate date/time used for conversion
 * @param error Error message (present only if no data is available)
 */
data class InlineResponse2003Data (

    /* Source currency code */
    val from: kotlin.String? = null,
    /* Target currency code */
    val to: kotlin.String? = null,
    /* Amount to convert */
    val amount: java.math.BigDecimal? = null,
    /* Conversion rate applied */
    val rate: java.math.BigDecimal? = null,
    /* Result of the conversion (amount * rate) */
    val conversionResult: java.math.BigDecimal? = null,
    /* Rate date/time used for conversion */
    val date: java.time.LocalDateTime? = null,
    /* Error message (present only if no data is available) */
    val error: kotlin.String? = null
) {
}