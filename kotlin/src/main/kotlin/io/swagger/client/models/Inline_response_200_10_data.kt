/**
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param symbol Cryptocurrency symbol (e.g. BTC, ETH)
 * @param last Last trade price in USD
 * @param dailyChangePercentage 24h change percentage
 * @param lastBtc Price in BTC, if available
 * @param low 24h low price
 * @param high 24h high price
 * @param updated Time of the last update
 * @param source Source table
 */
data class InlineResponse20010Data (

    /* Cryptocurrency symbol (e.g. BTC, ETH) */
    val symbol: kotlin.String? = null,
    /* Last trade price in USD */
    val last: java.math.BigDecimal? = null,
    /* 24h change percentage */
    val dailyChangePercentage: java.math.BigDecimal? = null,
    /* Price in BTC, if available */
    val lastBtc: java.math.BigDecimal? = null,
    /* 24h low price */
    val low: java.math.BigDecimal? = null,
    /* 24h high price */
    val high: java.math.BigDecimal? = null,
    /* Time of the last update */
    val updated: java.time.LocalDateTime? = null,
    /* Source table */
    val source: kotlin.String? = null
) {
}