/**
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param symbol Pair symbol (e.g. \"EURUSD\", \"BTCUSD\")
 * @param last Last trade price
 * @param change Absolute daily change
 * @param changePercent Daily change as a percent
 * @param weeklyChange Absolute weekly change
 * @param weeklyChangePercent Weekly change as a percent
 * @param monthlyChange Absolute monthly change
 * @param monthlyChangePercent Monthly change as a percent
 * @param yearlyChange Absolute yearly change
 * @param yearlyChangePercent Yearly change as a percent
 * @param ask Ask price
 * @param bid Bid price
 * @param dailyLowest Lowest price of the day
 * @param dailyHighest Highest price of the day
 * @param openToday Open price of the day
 * @param date Time of the last update (\"YYYY-MM-DD HH:mm:ss\")
 */
data class InlineResponse2001Data (

    /* Pair symbol (e.g. \"EURUSD\", \"BTCUSD\") */
    val symbol: kotlin.String? = null,
    /* Last trade price */
    val last: java.math.BigDecimal? = null,
    /* Absolute daily change */
    val change: java.math.BigDecimal? = null,
    /* Daily change as a percent */
    val changePercent: java.math.BigDecimal? = null,
    /* Absolute weekly change */
    val weeklyChange: java.math.BigDecimal? = null,
    /* Weekly change as a percent */
    val weeklyChangePercent: java.math.BigDecimal? = null,
    /* Absolute monthly change */
    val monthlyChange: java.math.BigDecimal? = null,
    /* Monthly change as a percent */
    val monthlyChangePercent: java.math.BigDecimal? = null,
    /* Absolute yearly change */
    val yearlyChange: java.math.BigDecimal? = null,
    /* Yearly change as a percent */
    val yearlyChangePercent: java.math.BigDecimal? = null,
    /* Ask price */
    val ask: java.math.BigDecimal? = null,
    /* Bid price */
    val bid: java.math.BigDecimal? = null,
    /* Lowest price of the day */
    val dailyLowest: java.math.BigDecimal? = null,
    /* Highest price of the day */
    val dailyHighest: java.math.BigDecimal? = null,
    /* Open price of the day */
    val openToday: java.math.BigDecimal? = null,
    /* Time of the last update (\"YYYY-MM-DD HH:mm:ss\") */
    val date: kotlin.String? = null
) {
}