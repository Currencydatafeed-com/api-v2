/**
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param symbol Cryptocurrency pair (e.g. BTCUSDT)
 * @param last Last trade price
 * @param low 24h low price
 * @param high 24h high price
 * @param previousDay Previous day's closing price
 * @param dailyChangePercentage 24h change percentage
 * @param source Exchange/market name (e.g. binance, bybit)
 * @param updated Last update time
 */
data class InlineResponse20012Data (

    /* Cryptocurrency pair (e.g. BTCUSDT) */
    val symbol: kotlin.String? = null,
    /* Last trade price */
    val last: java.math.BigDecimal? = null,
    /* 24h low price */
    val low: java.math.BigDecimal? = null,
    /* 24h high price */
    val high: java.math.BigDecimal? = null,
    /* Previous day's closing price */
    val previousDay: java.math.BigDecimal? = null,
    /* 24h change percentage */
    val dailyChangePercentage: java.math.BigDecimal? = null,
    /* Exchange/market name (e.g. binance, bybit) */
    val source: kotlin.String? = null,
    /* Last update time */
    val updated: java.time.LocalDateTime? = null
) {
}