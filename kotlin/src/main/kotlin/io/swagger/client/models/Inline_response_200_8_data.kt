/**
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package io.swagger.client.models


/**
 * 
 * @param symbol The queried symbol
 * @param pivot Pivot point
 * @param resistance1 First resistance level
 * @param support1 First support level
 * @param resistance2 Second resistance level
 * @param support2 Second support level
 * @param resistance3 Third resistance level
 * @param support3 Third support level
 * @param bollingerUpper Bollinger Bands upper value (if enough data)
 * @param bollingerLower Bollinger Bands lower value (if enough data)
 */
data class InlineResponse2008Data (

    /* The queried symbol */
    val symbol: kotlin.String? = null,
    /* Pivot point */
    val pivot: java.math.BigDecimal? = null,
    /* First resistance level */
    val resistance1: java.math.BigDecimal? = null,
    /* First support level */
    val support1: java.math.BigDecimal? = null,
    /* Second resistance level */
    val resistance2: java.math.BigDecimal? = null,
    /* Second support level */
    val support2: java.math.BigDecimal? = null,
    /* Third resistance level */
    val resistance3: java.math.BigDecimal? = null,
    /* Third support level */
    val support3: java.math.BigDecimal? = null,
    /* Bollinger Bands upper value (if enough data) */
    val bollingerUpper: java.math.BigDecimal? = null,
    /* Bollinger Bands lower value (if enough data) */
    val bollingerLower: java.math.BigDecimal? = null
) {
}