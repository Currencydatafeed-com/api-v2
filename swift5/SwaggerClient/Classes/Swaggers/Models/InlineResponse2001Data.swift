//
// InlineResponse2001Data.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct InlineResponse2001Data: Codable {

    /** Pair symbol (e.g. \&quot;EURUSD\&quot;, \&quot;BTCUSD\&quot;) */
    public var symbol: String?
    /** Last trade price */
    public var last: Decimal?
    /** Absolute daily change */
    public var change: Decimal?
    /** Daily change as a percent */
    public var changePercent: Decimal?
    /** Absolute weekly change */
    public var weeklyChange: Decimal?
    /** Weekly change as a percent */
    public var weeklyChangePercent: Decimal?
    /** Absolute monthly change */
    public var monthlyChange: Decimal?
    /** Monthly change as a percent */
    public var monthlyChangePercent: Decimal?
    /** Absolute yearly change */
    public var yearlyChange: Decimal?
    /** Yearly change as a percent */
    public var yearlyChangePercent: Decimal?
    /** Ask price */
    public var ask: Decimal?
    /** Bid price */
    public var bid: Decimal?
    /** Lowest price of the day */
    public var dailyLowest: Decimal?
    /** Highest price of the day */
    public var dailyHighest: Decimal?
    /** Open price of the day */
    public var openToday: Decimal?
    /** Time of the last update (\&quot;YYYY-MM-DD HH:mm:ss\&quot;) */
    public var date: String?

    public init(symbol: String? = nil, last: Decimal? = nil, change: Decimal? = nil, changePercent: Decimal? = nil, weeklyChange: Decimal? = nil, weeklyChangePercent: Decimal? = nil, monthlyChange: Decimal? = nil, monthlyChangePercent: Decimal? = nil, yearlyChange: Decimal? = nil, yearlyChangePercent: Decimal? = nil, ask: Decimal? = nil, bid: Decimal? = nil, dailyLowest: Decimal? = nil, dailyHighest: Decimal? = nil, openToday: Decimal? = nil, date: String? = nil) {
        self.symbol = symbol
        self.last = last
        self.change = change
        self.changePercent = changePercent
        self.weeklyChange = weeklyChange
        self.weeklyChangePercent = weeklyChangePercent
        self.monthlyChange = monthlyChange
        self.monthlyChangePercent = monthlyChangePercent
        self.yearlyChange = yearlyChange
        self.yearlyChangePercent = yearlyChangePercent
        self.ask = ask
        self.bid = bid
        self.dailyLowest = dailyLowest
        self.dailyHighest = dailyHighest
        self.openToday = openToday
        self.date = date
    }

    public enum CodingKeys: String, CodingKey { 
        case symbol
        case last
        case change
        case changePercent = "change_percent"
        case weeklyChange = "weekly_change"
        case weeklyChangePercent = "weekly_change_percent"
        case monthlyChange = "monthly_change"
        case monthlyChangePercent = "monthly_change_percent"
        case yearlyChange = "yearly_change"
        case yearlyChangePercent = "yearly_change_percent"
        case ask
        case bid
        case dailyLowest = "daily_lowest"
        case dailyHighest = "daily_highest"
        case openToday = "open_today"
        case date
    }

}
