<?php
/**
 * InlineResponse2004Data
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Currencydatafeed.com API V2
 *
 * > ğŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found.
 *
 * OpenAPI spec version: 2.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.68
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * InlineResponse2004Data Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse2004Data implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_200_4_data';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'symbol' => 'string',
        'percentage_change_1h' => 'float',
        'percentage_change_4h' => 'float',
        'percentage_change_1d' => 'float',
        'percentage_change_7d' => 'float',
        'percentage_change_30d' => 'float',
        'percentage_change_90d' => 'float',
        'percentage_change_180d' => 'float',
        'percentage_change_270d' => 'float',
        'percentage_change_365d' => 'float',
        'percentage_change_720d' => 'float'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'symbol' => null,
        'percentage_change_1h' => null,
        'percentage_change_4h' => null,
        'percentage_change_1d' => null,
        'percentage_change_7d' => null,
        'percentage_change_30d' => null,
        'percentage_change_90d' => null,
        'percentage_change_180d' => null,
        'percentage_change_270d' => null,
        'percentage_change_365d' => null,
        'percentage_change_720d' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'symbol' => 'symbol',
        'percentage_change_1h' => 'PercentageChange_1h',
        'percentage_change_4h' => 'PercentageChange_4h',
        'percentage_change_1d' => 'PercentageChange_1d',
        'percentage_change_7d' => 'PercentageChange_7d',
        'percentage_change_30d' => 'PercentageChange_30d',
        'percentage_change_90d' => 'PercentageChange_90d',
        'percentage_change_180d' => 'PercentageChange_180d',
        'percentage_change_270d' => 'PercentageChange_270d',
        'percentage_change_365d' => 'PercentageChange_365d',
        'percentage_change_720d' => 'PercentageChange_720d'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'symbol' => 'setSymbol',
        'percentage_change_1h' => 'setPercentageChange1h',
        'percentage_change_4h' => 'setPercentageChange4h',
        'percentage_change_1d' => 'setPercentageChange1d',
        'percentage_change_7d' => 'setPercentageChange7d',
        'percentage_change_30d' => 'setPercentageChange30d',
        'percentage_change_90d' => 'setPercentageChange90d',
        'percentage_change_180d' => 'setPercentageChange180d',
        'percentage_change_270d' => 'setPercentageChange270d',
        'percentage_change_365d' => 'setPercentageChange365d',
        'percentage_change_720d' => 'setPercentageChange720d'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'symbol' => 'getSymbol',
        'percentage_change_1h' => 'getPercentageChange1h',
        'percentage_change_4h' => 'getPercentageChange4h',
        'percentage_change_1d' => 'getPercentageChange1d',
        'percentage_change_7d' => 'getPercentageChange7d',
        'percentage_change_30d' => 'getPercentageChange30d',
        'percentage_change_90d' => 'getPercentageChange90d',
        'percentage_change_180d' => 'getPercentageChange180d',
        'percentage_change_270d' => 'getPercentageChange270d',
        'percentage_change_365d' => 'getPercentageChange365d',
        'percentage_change_720d' => 'getPercentageChange720d'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['symbol'] = isset($data['symbol']) ? $data['symbol'] : null;
        $this->container['percentage_change_1h'] = isset($data['percentage_change_1h']) ? $data['percentage_change_1h'] : null;
        $this->container['percentage_change_4h'] = isset($data['percentage_change_4h']) ? $data['percentage_change_4h'] : null;
        $this->container['percentage_change_1d'] = isset($data['percentage_change_1d']) ? $data['percentage_change_1d'] : null;
        $this->container['percentage_change_7d'] = isset($data['percentage_change_7d']) ? $data['percentage_change_7d'] : null;
        $this->container['percentage_change_30d'] = isset($data['percentage_change_30d']) ? $data['percentage_change_30d'] : null;
        $this->container['percentage_change_90d'] = isset($data['percentage_change_90d']) ? $data['percentage_change_90d'] : null;
        $this->container['percentage_change_180d'] = isset($data['percentage_change_180d']) ? $data['percentage_change_180d'] : null;
        $this->container['percentage_change_270d'] = isset($data['percentage_change_270d']) ? $data['percentage_change_270d'] : null;
        $this->container['percentage_change_365d'] = isset($data['percentage_change_365d']) ? $data['percentage_change_365d'] : null;
        $this->container['percentage_change_720d'] = isset($data['percentage_change_720d']) ? $data['percentage_change_720d'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets symbol
     *
     * @return string
     */
    public function getSymbol()
    {
        return $this->container['symbol'];
    }

    /**
     * Sets symbol
     *
     * @param string $symbol Symbol queried
     *
     * @return $this
     */
    public function setSymbol($symbol)
    {
        $this->container['symbol'] = $symbol;

        return $this;
    }

    /**
     * Gets percentage_change_1h
     *
     * @return float
     */
    public function getPercentageChange1h()
    {
        return $this->container['percentage_change_1h'];
    }

    /**
     * Sets percentage_change_1h
     *
     * @param float $percentage_change_1h Percentage change in the last 1 hour
     *
     * @return $this
     */
    public function setPercentageChange1h($percentage_change_1h)
    {
        $this->container['percentage_change_1h'] = $percentage_change_1h;

        return $this;
    }

    /**
     * Gets percentage_change_4h
     *
     * @return float
     */
    public function getPercentageChange4h()
    {
        return $this->container['percentage_change_4h'];
    }

    /**
     * Sets percentage_change_4h
     *
     * @param float $percentage_change_4h Percentage change in the last 4 hours
     *
     * @return $this
     */
    public function setPercentageChange4h($percentage_change_4h)
    {
        $this->container['percentage_change_4h'] = $percentage_change_4h;

        return $this;
    }

    /**
     * Gets percentage_change_1d
     *
     * @return float
     */
    public function getPercentageChange1d()
    {
        return $this->container['percentage_change_1d'];
    }

    /**
     * Sets percentage_change_1d
     *
     * @param float $percentage_change_1d Percentage change in the last 1 day
     *
     * @return $this
     */
    public function setPercentageChange1d($percentage_change_1d)
    {
        $this->container['percentage_change_1d'] = $percentage_change_1d;

        return $this;
    }

    /**
     * Gets percentage_change_7d
     *
     * @return float
     */
    public function getPercentageChange7d()
    {
        return $this->container['percentage_change_7d'];
    }

    /**
     * Sets percentage_change_7d
     *
     * @param float $percentage_change_7d Percentage change in the last 7 days
     *
     * @return $this
     */
    public function setPercentageChange7d($percentage_change_7d)
    {
        $this->container['percentage_change_7d'] = $percentage_change_7d;

        return $this;
    }

    /**
     * Gets percentage_change_30d
     *
     * @return float
     */
    public function getPercentageChange30d()
    {
        return $this->container['percentage_change_30d'];
    }

    /**
     * Sets percentage_change_30d
     *
     * @param float $percentage_change_30d Percentage change in the last 30 days
     *
     * @return $this
     */
    public function setPercentageChange30d($percentage_change_30d)
    {
        $this->container['percentage_change_30d'] = $percentage_change_30d;

        return $this;
    }

    /**
     * Gets percentage_change_90d
     *
     * @return float
     */
    public function getPercentageChange90d()
    {
        return $this->container['percentage_change_90d'];
    }

    /**
     * Sets percentage_change_90d
     *
     * @param float $percentage_change_90d Percentage change in the last 90 days
     *
     * @return $this
     */
    public function setPercentageChange90d($percentage_change_90d)
    {
        $this->container['percentage_change_90d'] = $percentage_change_90d;

        return $this;
    }

    /**
     * Gets percentage_change_180d
     *
     * @return float
     */
    public function getPercentageChange180d()
    {
        return $this->container['percentage_change_180d'];
    }

    /**
     * Sets percentage_change_180d
     *
     * @param float $percentage_change_180d Percentage change in the last 180 days
     *
     * @return $this
     */
    public function setPercentageChange180d($percentage_change_180d)
    {
        $this->container['percentage_change_180d'] = $percentage_change_180d;

        return $this;
    }

    /**
     * Gets percentage_change_270d
     *
     * @return float
     */
    public function getPercentageChange270d()
    {
        return $this->container['percentage_change_270d'];
    }

    /**
     * Sets percentage_change_270d
     *
     * @param float $percentage_change_270d Percentage change in the last 270 days
     *
     * @return $this
     */
    public function setPercentageChange270d($percentage_change_270d)
    {
        $this->container['percentage_change_270d'] = $percentage_change_270d;

        return $this;
    }

    /**
     * Gets percentage_change_365d
     *
     * @return float
     */
    public function getPercentageChange365d()
    {
        return $this->container['percentage_change_365d'];
    }

    /**
     * Sets percentage_change_365d
     *
     * @param float $percentage_change_365d Percentage change in the last 365 days
     *
     * @return $this
     */
    public function setPercentageChange365d($percentage_change_365d)
    {
        $this->container['percentage_change_365d'] = $percentage_change_365d;

        return $this;
    }

    /**
     * Gets percentage_change_720d
     *
     * @return float
     */
    public function getPercentageChange720d()
    {
        return $this->container['percentage_change_720d'];
    }

    /**
     * Sets percentage_change_720d
     *
     * @param float $percentage_change_720d Percentage change in the last 720 days
     *
     * @return $this
     */
    public function setPercentageChange720d($percentage_change_720d)
    {
        $this->container['percentage_change_720d'] = $percentage_change_720d;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
