/*
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The InlineResponse2003Data model module.
 * @module model/InlineResponse2003Data
 * @version 2.0.1
 */
export default class InlineResponse2003Data {
  /**
   * Constructs a new <code>InlineResponse2003Data</code>.
   * @alias module:model/InlineResponse2003Data
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse2003Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2003Data} obj Optional instance to populate.
   * @return {module:model/InlineResponse2003Data} The populated <code>InlineResponse2003Data</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse2003Data();
      if (data.hasOwnProperty('from'))
        obj.from = ApiClient.convertToType(data['from'], 'String');
      if (data.hasOwnProperty('to'))
        obj.to = ApiClient.convertToType(data['to'], 'String');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('rate'))
        obj.rate = ApiClient.convertToType(data['rate'], 'Number');
      if (data.hasOwnProperty('conversion_result'))
        obj.conversionResult = ApiClient.convertToType(data['conversion_result'], 'Number');
      if (data.hasOwnProperty('date'))
        obj._date = ApiClient.convertToType(data['date'], 'Date');
      if (data.hasOwnProperty('error'))
        obj.error = ApiClient.convertToType(data['error'], 'String');
    }
    return obj;
  }
}

/**
 * Source currency code
 * @member {String} from
 */
InlineResponse2003Data.prototype.from = undefined;

/**
 * Target currency code
 * @member {String} to
 */
InlineResponse2003Data.prototype.to = undefined;

/**
 * Amount to convert
 * @member {Number} amount
 */
InlineResponse2003Data.prototype.amount = undefined;

/**
 * Conversion rate applied
 * @member {Number} rate
 */
InlineResponse2003Data.prototype.rate = undefined;

/**
 * Result of the conversion (amount * rate)
 * @member {Number} conversionResult
 */
InlineResponse2003Data.prototype.conversionResult = undefined;

/**
 * Rate date/time used for conversion
 * @member {Date} _date
 */
InlineResponse2003Data.prototype._date = undefined;

/**
 * Error message (present only if no data is available)
 * @member {String} error
 */
InlineResponse2003Data.prototype.error = undefined;

