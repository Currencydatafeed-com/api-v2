/*
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.68
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from '../ApiClient';

/**
 * The InlineResponse2001Data model module.
 * @module model/InlineResponse2001Data
 * @version 2.0.1
 */
export default class InlineResponse2001Data {
  /**
   * Constructs a new <code>InlineResponse2001Data</code>.
   * @alias module:model/InlineResponse2001Data
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>InlineResponse2001Data</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponse2001Data} obj Optional instance to populate.
   * @return {module:model/InlineResponse2001Data} The populated <code>InlineResponse2001Data</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineResponse2001Data();
      if (data.hasOwnProperty('symbol'))
        obj.symbol = ApiClient.convertToType(data['symbol'], 'String');
      if (data.hasOwnProperty('last'))
        obj.last = ApiClient.convertToType(data['last'], 'Number');
      if (data.hasOwnProperty('change'))
        obj.change = ApiClient.convertToType(data['change'], 'Number');
      if (data.hasOwnProperty('change_percent'))
        obj.changePercent = ApiClient.convertToType(data['change_percent'], 'Number');
      if (data.hasOwnProperty('weekly_change'))
        obj.weeklyChange = ApiClient.convertToType(data['weekly_change'], 'Number');
      if (data.hasOwnProperty('weekly_change_percent'))
        obj.weeklyChangePercent = ApiClient.convertToType(data['weekly_change_percent'], 'Number');
      if (data.hasOwnProperty('monthly_change'))
        obj.monthlyChange = ApiClient.convertToType(data['monthly_change'], 'Number');
      if (data.hasOwnProperty('monthly_change_percent'))
        obj.monthlyChangePercent = ApiClient.convertToType(data['monthly_change_percent'], 'Number');
      if (data.hasOwnProperty('yearly_change'))
        obj.yearlyChange = ApiClient.convertToType(data['yearly_change'], 'Number');
      if (data.hasOwnProperty('yearly_change_percent'))
        obj.yearlyChangePercent = ApiClient.convertToType(data['yearly_change_percent'], 'Number');
      if (data.hasOwnProperty('ask'))
        obj.ask = ApiClient.convertToType(data['ask'], 'Number');
      if (data.hasOwnProperty('bid'))
        obj.bid = ApiClient.convertToType(data['bid'], 'Number');
      if (data.hasOwnProperty('daily_lowest'))
        obj.dailyLowest = ApiClient.convertToType(data['daily_lowest'], 'Number');
      if (data.hasOwnProperty('daily_highest'))
        obj.dailyHighest = ApiClient.convertToType(data['daily_highest'], 'Number');
      if (data.hasOwnProperty('open_today'))
        obj.openToday = ApiClient.convertToType(data['open_today'], 'Number');
      if (data.hasOwnProperty('date'))
        obj._date = ApiClient.convertToType(data['date'], 'String');
    }
    return obj;
  }
}

/**
 * Pair symbol (e.g. \"EURUSD\", \"BTCUSD\")
 * @member {String} symbol
 */
InlineResponse2001Data.prototype.symbol = undefined;

/**
 * Last trade price
 * @member {Number} last
 */
InlineResponse2001Data.prototype.last = undefined;

/**
 * Absolute daily change
 * @member {Number} change
 */
InlineResponse2001Data.prototype.change = undefined;

/**
 * Daily change as a percent
 * @member {Number} changePercent
 */
InlineResponse2001Data.prototype.changePercent = undefined;

/**
 * Absolute weekly change
 * @member {Number} weeklyChange
 */
InlineResponse2001Data.prototype.weeklyChange = undefined;

/**
 * Weekly change as a percent
 * @member {Number} weeklyChangePercent
 */
InlineResponse2001Data.prototype.weeklyChangePercent = undefined;

/**
 * Absolute monthly change
 * @member {Number} monthlyChange
 */
InlineResponse2001Data.prototype.monthlyChange = undefined;

/**
 * Monthly change as a percent
 * @member {Number} monthlyChangePercent
 */
InlineResponse2001Data.prototype.monthlyChangePercent = undefined;

/**
 * Absolute yearly change
 * @member {Number} yearlyChange
 */
InlineResponse2001Data.prototype.yearlyChange = undefined;

/**
 * Yearly change as a percent
 * @member {Number} yearlyChangePercent
 */
InlineResponse2001Data.prototype.yearlyChangePercent = undefined;

/**
 * Ask price
 * @member {Number} ask
 */
InlineResponse2001Data.prototype.ask = undefined;

/**
 * Bid price
 * @member {Number} bid
 */
InlineResponse2001Data.prototype.bid = undefined;

/**
 * Lowest price of the day
 * @member {Number} dailyLowest
 */
InlineResponse2001Data.prototype.dailyLowest = undefined;

/**
 * Highest price of the day
 * @member {Number} dailyHighest
 */
InlineResponse2001Data.prototype.dailyHighest = undefined;

/**
 * Open price of the day
 * @member {Number} openToday
 */
InlineResponse2001Data.prototype.openToday = undefined;

/**
 * Time of the last update (\"YYYY-MM-DD HH:mm:ss\")
 * @member {String} _date
 */
InlineResponse2001Data.prototype._date = undefined;

