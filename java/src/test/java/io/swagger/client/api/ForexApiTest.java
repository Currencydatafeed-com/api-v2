/*
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import java.math.BigDecimal;
import io.swagger.client.model.InlineResponse2001;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.InlineResponse2005;
import io.swagger.client.model.InlineResponse2006;
import io.swagger.client.model.InlineResponse2007;
import io.swagger.client.model.InlineResponse2008;
import io.swagger.client.model.InlineResponse2009;
import org.threeten.bp.LocalDate;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ForexApi
 */
@Ignore
public class ForexApiTest {

    private final ForexApi api = new ForexApi();

    /**
     * Convert an amount between two currencies
     *
     * Converts a specified amount from one currency to another, returning the latest available rate and result. Direct, reverse, or USD-intermediate conversion is used as needed. All parameters are required. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void convertAmountTest() throws Exception {
        String from = null;
        String to = null;
        BigDecimal amount = null;
        InlineResponse2003 response = api.convertAmount(from, to, amount);

        // TODO: test validations
    }
    /**
     * Get historical OHLC data for a currency pair on a given date
     *
     * Returns historical open, high, low, and close values for one or more currency pairs on a specific date. If direct data is not available for a pair, the system attempts to reverse the pair. Returns an error if the date is more than 4 years in the past. Requires authentication and a subscription with historical access. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getHistoricalOHLCTest() throws Exception {
        String symbol = null;
        LocalDate date = null;
        InlineResponse2005 response = api.getHistoricalOHLC(symbol, date);

        // TODO: test validations
    }
    /**
     * Get intraday (minute/hour) OHLC data for a symbol with flexible time selection
     *
     * Returns intraday open, high, low, and close (OHLC) data for a symbol, supporting multiple time selection modes: - **last:** Most recent N records - **hours:** Records for the last N hours - **from/to:** Records between custom date ranges The &#x60;interval&#x60; parameter is required (valid values: 1, 5, 15, 60 for minutes/hours). You must specify **exactly one** of the following: &#x60;last&#x60;, &#x60;hours&#x60;, or both &#x60;from&#x60; and &#x60;to&#x60;. Requires authentication and subscription with intraday/minute OHLC access. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getIntradayOHLCTest() throws Exception {
        String symbol = null;
        Integer interval = null;
        Integer last = null;
        Integer hours = null;
        LocalDate from = null;
        LocalDate to = null;
        InlineResponse2007 response = api.getIntradayOHLC(symbol, interval, last, hours, from, to);

        // TODO: test validations
    }
    /**
     * Technical Analysis - Get Support, Resistence, Bollinger Bands for a symbol
     *
     * Returns pivot points (pivot, support/resistance levels) and Bollinger Bands for the latest data of the specified symbol. Requires authentication and a subscription with technical analysis (TA) access. If not enough historical data is available for Bollinger Bands (minimum 20 periods), the endpoint returns an error for that calculation. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getLevelsTest() throws Exception {
        String symbol = null;
        InlineResponse2008 response = api.getLevels(symbol);

        // TODO: test validations
    }
    /**
     * Get live forex prices
     *
     * Returns the latest live rates for all supported forex currency pairs.  You can request specific pairs by providing a comma-separated list of symbols in the &#x60;symbol&#x60; parameter, e.g. &#x60;EURUSD,GBPUSD,USDSEK&#x60;. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getLiveRatesTest() throws Exception {
        String symbol = null;
        InlineResponse2001 response = api.getLiveRates(symbol);

        // TODO: test validations
    }
    /**
     * Get historical OHLC data for a currency pair within a date range
     *
     * Returns historical open, high, low, and close (OHLC) data for a currency pair over a specified date range. Maximum 8 years of data can be queried at once.   Requires authentication and a subscription with timeframe query access. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getOHLCByTimeframeTest() throws Exception {
        String currency = null;
        LocalDate from = null;
        LocalDate to = null;
        InlineResponse2006 response = api.getOHLCByTimeframe(currency, from, to);

        // TODO: test validations
    }
    /**
     * Get percentage changes for a symbol for different periods
     *
     * Returns the percentage change in price for the given symbol over several time intervals (1 hour, 4 hours, 1 day, 7 days, 30 days, 90 days, 180 days, 270 days, 365 days, 720 days). Requires authentication and an active subscription with gainers/losers access. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getPerformanceTest() throws Exception {
        String symbol = null;
        InlineResponse2004 response = api.getPerformance(symbol);

        // TODO: test validations
    }
    /**
     * Get rates with other currencies using a custom base currency
     *
     * Returns the latest exchange rates for one or more target currencies, using the specified base currency as the reference. Provide the base (source) and one or more target currencies (comma-separated) in the query string. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getRatesBySourceTest() throws Exception {
        String source = null;
        List<String> target = null;
        List<InlineResponse2002> response = api.getRatesBySource(source, target);

        // TODO: test validations
    }
    /**
     * Get technical analysis indicators for a symbol (Ema &amp; Sma Levels, CCI, Williams%R, ADX and Stochastic Indicators)
     *
     * Returns a range of daily technical analysis indicators for the specified symbol (up to 720 days). Includes MACD, RSI, moving averages, Stochastic, ADX, CCI, Williams %R, and more. Requires authentication and a subscription with technical analysis (TA) access. 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTechnicalAnalysisTest() throws Exception {
        String symbol = null;
        Integer days = null;
        InlineResponse2009 response = api.getTechnicalAnalysis(symbol, days);

        // TODO: test validations
    }
}
