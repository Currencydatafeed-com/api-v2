/*
 * Currencydatafeed.com API V2
 * > ðŸ“˜ **Looking for V1 API documentation?**   > Visit: [https://currencydatafeed.com/documentation.php](https://currencydatafeed.com/documentation.php)   A comprehensive data API to retrieve live and historical prices for currency pairs and cryptocurrencies, including technical analysis endpoints and on-chain metrics.  ## Authentication  All endpoints require an API token.  **Recommended:** Send your API token as a Bearer token in the HTTP `Authorization` header:  ``` Authorization: Bearer YOUR_API_TOKEN ```  **Example (cURL):** ```shell curl -H \"Authorization: Bearer YOUR_API_TOKEN\" \\   \"https://currencydatafeed.com/api/v2/live-rates\" ```  **Alternative:** You may also send the token as a `token` query parameter, but this is less secure and not recommended:  ``` https://currencydatafeed.com/api/v2/live-rates?token=YOUR_API_TOKEN ```  > The API first checks the Authorization header, then the `token` parameter if no header is found. 
 *
 * OpenAPI spec version: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.InlineResponse2006Data;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.LocalDate;
/**
 * InlineResponse2006
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-06-16T10:33:10.614284809Z[GMT]")

public class InlineResponse2006 {
  @SerializedName("status")
  private Boolean status = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("from")
  private LocalDate from = null;

  @SerializedName("to")
  private LocalDate to = null;

  @SerializedName("data")
  private List<InlineResponse2006Data> data = null;

  public InlineResponse2006 status(Boolean status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public Boolean isStatus() {
    return status;
  }

  public void setStatus(Boolean status) {
    this.status = status;
  }

  public InlineResponse2006 currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * The queried currency pair
   * @return currency
  **/
  @Schema(description = "The queried currency pair")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public InlineResponse2006 from(LocalDate from) {
    this.from = from;
    return this;
  }

   /**
   * Start date of the query
   * @return from
  **/
  @Schema(description = "Start date of the query")
  public LocalDate getFrom() {
    return from;
  }

  public void setFrom(LocalDate from) {
    this.from = from;
  }

  public InlineResponse2006 to(LocalDate to) {
    this.to = to;
    return this;
  }

   /**
   * End date of the query
   * @return to
  **/
  @Schema(description = "End date of the query")
  public LocalDate getTo() {
    return to;
  }

  public void setTo(LocalDate to) {
    this.to = to;
  }

  public InlineResponse2006 data(List<InlineResponse2006Data> data) {
    this.data = data;
    return this;
  }

  public InlineResponse2006 addDataItem(InlineResponse2006Data dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<InlineResponse2006Data>();
    }
    this.data.add(dataItem);
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @Schema(description = "")
  public List<InlineResponse2006Data> getData() {
    return data;
  }

  public void setData(List<InlineResponse2006Data> data) {
    this.data = data;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2006 inlineResponse2006 = (InlineResponse2006) o;
    return Objects.equals(this.status, inlineResponse2006.status) &&
        Objects.equals(this.currency, inlineResponse2006.currency) &&
        Objects.equals(this.from, inlineResponse2006.from) &&
        Objects.equals(this.to, inlineResponse2006.to) &&
        Objects.equals(this.data, inlineResponse2006.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, currency, from, to, data);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2006 {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
